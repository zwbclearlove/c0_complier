//
// Created by zwb on 2020/11/10.
//

#ifndef C0_COMPLIER_ERROR_H
#define C0_COMPLIER_ERROR_H

#include "complier.h"
#include "lexical_analyzer.h"

enum ERROR_TYPE {
    //lexical_error
    INT_OVERFLOW, UNEXPECTED_CHAR_IN_INT, INVALID_CHAR_CON, INVALID_STRING_CON,
    UNKNOWN_SYMBOL,
    //syntactic_error
    IDEN_REDEFINITION, IDEN_NO_DEFINITION, FUNC_NO_DEFINITION, FUNC_PARA_NUM_DISPATCH,
    FUNC_PARA_TYPE_DISPATCH, CONDITION_TYPE_DISPATCH, RETURN_TYPE_DISPATCH,
    EXPECT_RETURN_SENTENCE, RETURN_EXP_IN_VOID_FUNC, ARRAY_INDEX_TYPE_DISPATCH,
    ASSIGN_TO_CONSTANT, EXPECT_SEMICN, EXPECT_RPARENT, EXPECT_RBRACK,
    INVALID_NUM_IN_ARRAY_INIT, INVALID_TYPE_IN_ARRAY_INIT, CONSTANT_TYPE_DISPATCH,
    EXPECT_DEFAULT_SENTENCE
};

extern std::ofstream err;
extern bool error_in_program;

void log_error(ERROR_TYPE errorType, int lineNO);

#endif //C0_COMPLIER_ERROR_H
